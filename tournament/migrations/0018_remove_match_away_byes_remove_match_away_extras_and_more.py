# Generated by Django 5.2 on 2025-04-29 15:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tournament', '0017_match_bowling_team_alter_match_batting_team'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='match',
            name='away_byes',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_extras',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_legbyes',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_noballs',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_team_overs',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_team_score',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_team_wickets',
        ),
        migrations.RemoveField(
            model_name='match',
            name='away_wides',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_byes',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_extras',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_legbyes',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_noballs',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_team_overs',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_team_score',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_team_wickets',
        ),
        migrations.RemoveField(
            model_name='match',
            name='home_wides',
        ),
        migrations.RemoveField(
            model_name='match',
            name='progress',
        ),
        migrations.AddField(
            model_name='match',
            name='is_powerplay',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='match',
            name='powerplay_overs',
            field=models.IntegerField(default=6),
        ),
        migrations.AddField(
            model_name='match',
            name='powerplay_runs',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='match',
            name='powerplay_wickets',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='battingperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batting_performances', to='tournament.match'),
        ),
        migrations.AlterField(
            model_name='bowlingperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowling_performances', to='tournament.match'),
        ),
        migrations.CreateModel(
            name='Ball',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runs', models.IntegerField(default=0)),
                ('is_wicket', models.BooleanField(default=False)),
                ('wicket_type', models.CharField(blank=True, choices=[('bowled', 'Bowled'), ('caught', 'Caught'), ('lbw', 'LBW'), ('run_out', 'Run Out'), ('stumped', 'Stumped'), ('hit_wicket', 'Hit Wicket')], max_length=20)),
                ('extras', models.CharField(blank=True, choices=[('wide', 'Wide'), ('no_ball', 'No Ball'), ('bye', 'Bye'), ('leg_bye', 'Leg Bye'), ('penalty', 'Penalty')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('batsman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batted_balls', to='tournament.player')),
                ('bowler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowled_balls', to='tournament.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.match')),
            ],
        ),
        migrations.CreateModel(
            name='DRS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('lbw', 'LBW'), ('caught', 'Caught'), ('stumped', 'Stumped'), ('run_out', 'Run Out')], max_length=20)),
                ('original_decision', models.CharField(choices=[('out', 'Out'), ('not_out', 'Not Out')], max_length=10)),
                ('reviewed_decision', models.CharField(choices=[('Out', 'Out'), ('Not Out', 'Not Out'), ("Umpire's Call", "Umpire's Call")], max_length=20)),
                ('is_successful', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.match')),
                ('requesting_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.team')),
                ('reviewing_player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.player')),
            ],
        ),
        migrations.CreateModel(
            name='Partnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runs', models.IntegerField()),
                ('balls', models.IntegerField()),
                ('innings', models.IntegerField()),
                ('batter1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batter1_partnerships', to='tournament.player')),
                ('batter2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batter2_partnerships', to='tournament.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.match')),
                ('wicket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.battingperformance')),
            ],
        ),
    ]
